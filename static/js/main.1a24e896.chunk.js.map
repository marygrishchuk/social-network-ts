{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Users/Users.module.css","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Messages/Message.module.css","components/Header/Header.module.css","components/Header/logo.png","components/Navbar/FriendsDisplay/FriendsDisplay.module.css","components/Profile/MyPosts/Post/like.svg","components/Profile/MyPosts/Post/notLiked.png","serviceWorker.ts","components/Header/Header.tsx","components/Navbar/FriendsDisplay/FriendsDisplayContainer.tsx","components/Navbar/FriendsDisplay/FriendsDisplay.tsx","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Messages/Message.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","redux/users-reducer.ts","components/Users/UsersContainer.tsx","components/Users/Users.tsx","App.tsx","redux/navbar-reducer.ts","redux/redux-store.ts","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","Header","className","s","header","src","logo","FriendsDisplayContainer","connect","state","friends","navBar","dispatch","props","map","f","avatar","name","Navbar","nav","linkContainer","to","activeClassName","active","settings","ProfileInfo","profileInfo","coverContainer","profileCover","avatarContainer","description","initialState","posts","id","v1","avatarUrl","message","liked","likesCount","newPostText","profileReducer","action","type","newPost","newText","stateCopy","postToLikeOrUnlike","find","p","postId","Post","item","ava","onClick","setLiked","like","likeImg","notLikedImg","MyPostsContainer","profilePage","addPost","updateNewPostText","setLikedActionCreator","postElements","onAddPost","postsBlock","textArea","value","onChange","e","text","currentTarget","onKeyPress","ctrlKey","charCode","placeholder","addButton","Profile","News","Music","Settings","dialogs","messages","newMessageText","dialogsReducer","newMessage","body","DialogItem","dialog","friendName","Message","rightSide","leftSide","DialogsContainer","dialogsPage","sendMessage","updateNewMessageBody","dialogsElements","d","messagesElements","m","newMessageBody","textarea","useRef","onSendMessageClick","current","focus","dialogItems","chat","ref","autoFocus","btn","users","usersReducer","u","userId","followed","usersPage","follow","followAC","unfollow","unfollowAC","setUsers","setUsersAC","length","photoURL","fullName","status","city","country","key","spanBlock","divBlock","photoBtnBlock","userPhoto","textInfoBlock","nameStatusBlock","cityCountryBlock","App","path","render","UsersContainer","navbarReducer","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.1a24e896.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3iETX\",\"linkContainer\":\"Navbar_linkContainer__11hUb\",\"active\":\"Navbar_active__KUwQj\",\"settings\":\"Navbar_settings__2HH2P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanBlock\":\"Users_spanBlock__20xc5\",\"divBlock\":\"Users_divBlock__lNMew\",\"photoBtnBlock\":\"Users_photoBtnBlock__3jzyj\",\"nameStatusBlock\":\"Users_nameStatusBlock__HZEV5\",\"textInfoBlock\":\"Users_textInfoBlock__2neom\",\"cityCountryBlock\":\"Users_cityCountryBlock__1JZAT\",\"userPhoto\":\"Users_userPhoto__1OmEJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Htpb\",\"dialogItems\":\"Dialogs_dialogItems__6IwSL\",\"messages\":\"Dialogs_messages__3zRWP\",\"chat\":\"Dialogs_chat__2qccB\",\"newMessage\":\"Dialogs_newMessage__3UBek\",\"textarea\":\"Dialogs_textarea__aqXpQ\",\"btn\":\"Dialogs_btn__9u19v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__30Prz\",\"coverContainer\":\"ProfileInfo_coverContainer__3lWly\",\"profileCover\":\"ProfileInfo_profileCover__2PW5F\",\"avatarContainer\":\"ProfileInfo_avatarContainer__6L0J2\",\"avatar\":\"ProfileInfo_avatar__hmvNl\",\"description\":\"ProfileInfo_description__QvS3n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2LmhB\",\"newPost\":\"MyPosts_newPost__2zgiH\",\"textArea\":\"MyPosts_textArea__UD6G7\",\"addButton\":\"MyPosts_addButton__QiBag\",\"posts\":\"MyPosts_posts__vm13l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2PUsA\",\"ava\":\"Post_ava__1lYQE\",\"name\":\"Post_name___NjC7\",\"message\":\"Post_message__1N-uC\",\"like\":\"Post_like__3GzLZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3li-h\",\"avatar\":\"DialogItem_avatar__30P8p\",\"active\":\"DialogItem_active__V0xw7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftSide\":\"Message_leftSide__2Rb2a\",\"rightSide\":\"Message_rightSide__1gStf\",\"message\":\"Message_message__cleDf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__12wRa\"};","module.exports = __webpack_public_path__ + \"static/media/logo.cb021b28.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"FriendsDisplay_friends__ORjzy\"};","module.exports = __webpack_public_path__ + \"static/media/like.0483f2b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/notLiked.742e1553.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport logo from './logo.png';\r\n\r\nexport const Header = () => {\r\n    return <header className={s.header}>\r\n        <img src={`${logo}`} />\r\n    </header>\r\n}","import React from \"react\";\r\nimport {FriendsDisplay} from \"./FriendsDisplay\";\r\nimport {ActionTypes, RootStateType} from \"../../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {FriendsType} from \"../../../redux/navbar-reducer\";\r\n\r\ntype MapStatePropsType = {\r\n    friends: Array<FriendsType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    //no callbacks yet\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return {\r\n        friends: state.navBar.friends\r\n    } as const\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: (action: ActionTypes) => void): MapDispatchPropsType => {\r\n    return {\r\n        //no callbacks yet\r\n    }\r\n}\r\n\r\nconst FriendsDisplayContainer = connect(mapStateToProps, mapDispatchToProps)(FriendsDisplay)\r\n\r\nexport default FriendsDisplayContainer","import {FriendsType} from \"../../../redux/navbar-reducer\";\r\nimport s from \"./FriendsDisplay.module.css\";\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    friends: Array<FriendsType>\r\n}\r\nexport const FriendsDisplay = (props: PropsType) => {\r\n    let friends = props.friends.map(f => <div><img src={f.avatar}/><br/>{f.name}</div>)\r\n\r\n    return <div className={s.friends}>\r\n        {friends}\r\n    </div>\r\n}","import React from \"react\";\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FriendsDisplayContainer from \"./FriendsDisplay/FriendsDisplayContainer\";\r\n\r\nexport const Navbar = () => {\r\n\r\n    return <nav className={s.nav}>\r\n        <div className={s.linkContainer}>\r\n            <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.linkContainer}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.linkContainer}>\r\n            <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n        </div>\r\n        <div className={s.linkContainer}>\r\n            <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n        </div>\r\n        <div className={s.linkContainer}>\r\n            <NavLink to=\"/users\" activeClassName={s.active}>Find Users</NavLink>\r\n        </div>\r\n        <div className={`${s.settings} ${s.linkContainer}`}>\r\n            <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n        </div>\r\n        <FriendsDisplayContainer/>\r\n    </nav>\r\n}\r\n","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\n\r\nexport const ProfileInfo = () => {\r\n    return <div className={s.profileInfo}>\r\n        <div className={s.coverContainer}>\r\n            <img className={s.profileCover}\r\n                 src=\"https://belarusfacts.by/upload/test/photos_png/Tourism/360/preview__3_.jpg\"/>\r\n        </div>\r\n        <div className={s.avatarContainer}>\r\n            <img className={s.avatar}\r\n                 src=\"https://i.pinimg.com/originals/5f/4f/2b/5f4f2b6eb1e078bc99c043330879c143.jpg\"/>\r\n        </div>\r\n        <div className={s.description}>\r\n            Anna Bell\r\n            <br/>\r\n            City: Minsk\r\n        </div>\r\n    </div>\r\n}","import {v1} from \"uuid\";\r\nimport {ActionTypes} from \"./redux-store\";\r\n\r\nexport type profileACTypes = ReturnType<typeof addPostActionCreator> | ReturnType<typeof updateNewPostTextActionCreator>\r\n    | ReturnType<typeof setLikedActionCreator>\r\n\r\nexport type PostType = {\r\n    id: string\r\n    name: string\r\n    avatarUrl: string\r\n    message: string\r\n    liked: boolean\r\n    likesCount: number\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n}\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_LIKED = \"SET-LIKED\";\r\n\r\nlet initialState: ProfilePageType = {\r\n        posts: [\r\n            {\r\n                id: v1(),\r\n                name: \"Johanna Fox\",\r\n                avatarUrl: \"https://artsland.ru/files/logos/21246bb6c07d46c71f9b3e51dd7bf1da.png\",\r\n                message: \"Hi! How are you?\",\r\n                liked: true,\r\n                likesCount: 15\r\n            },\r\n            {\r\n                id: v1(),\r\n                name: \"Kate Winsley\",\r\n                avatarUrl: \"https://www.spletnik.ru/thumb/310x310/img/persons/Eva-Mendes-post.jpg\",\r\n                message: \"I've learned React.\",\r\n                liked: true,\r\n                likesCount: 20\r\n            },\r\n            {\r\n                id: v1(),\r\n                name: \"Fiona Smith\",\r\n                avatarUrl: \"https://sun9-53.userapi.com/impf/c846523/v846523336/486aa/WAmlS7FDlqo.jpg?size=400x0&quality=90&crop=6,0,488,488&sign=18d5b99310a2fbe958b38251cab6b5db&c_uniq_tag=arHi9u4Wz5f8hjjNrw4bqf5GiIihueE46UdzBj4g3y0&ava=1\",\r\n                message: \"Happy Developer's Day!\",\r\n                liked: true,\r\n                likesCount: 5\r\n            },\r\n            {\r\n                id: v1(),\r\n                name: \"Bob Mayers\",\r\n                avatarUrl: \"https://bmstu.ru/ps/media/avatars/kartashov/IMG_4688223453130%20(2).jpeg\",\r\n                message: \"Are we gonna have a class tomorrow?\",\r\n                liked: false,\r\n                likesCount: 1\r\n            },\r\n            {\r\n                id: v1(),\r\n                name: \"Sandra Dalton\",\r\n                avatarUrl: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTLTHcfkORUBugIE9Cw71xLu03aUrJIWsPMLg&usqp=CAU\",\r\n                message: \"Let's get together tonight!:)\",\r\n                liked: true,\r\n                likesCount: 7\r\n            }],\r\n        newPostText: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: v1(),\r\n                name: \"Anna Bell\",\r\n                avatarUrl: \"https://i.pinimg.com/originals/5f/4f/2b/5f4f2b6eb1e078bc99c043330879c143.jpg\",\r\n                message: state.newPostText,\r\n                liked: false,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n                newPostText: \"\"\r\n            };\r\n        case UPDATE_NEW_POST_TEXT:\r\n            if (action.newText) {\r\n                return {\r\n                    ...state,\r\n                    newPostText: action.newText\r\n                }\r\n            }\r\n            return state\r\n        case SET_LIKED:\r\n            let stateCopy = {\r\n                ...state,\r\n                posts: [...state.posts]\r\n            }\r\n            let postToLikeOrUnlike = stateCopy.posts.find(p => p.id === action.postId)\r\n            if (postToLikeOrUnlike) {\r\n                postToLikeOrUnlike.liked = !action.liked\r\n                if (postToLikeOrUnlike.liked) {\r\n                    postToLikeOrUnlike.likesCount = postToLikeOrUnlike.likesCount + 1\r\n                } else {\r\n                    postToLikeOrUnlike.likesCount = postToLikeOrUnlike.likesCount - 1\r\n                }\r\n            }\r\n            return stateCopy;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST} as const)\r\n\r\nexport const updateNewPostTextActionCreator = (text: string) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text} as const)\r\n\r\nexport const setLikedActionCreator = (postId: string, liked: boolean) =>\r\n    ({type: SET_LIKED, postId: postId, liked: liked} as const)\r\n\r\nexport default profileReducer","import React from \"react\";\r\nimport s from './Post.module.css';\r\nimport likeImg from './like.svg';\r\nimport notLikedImg from './notLiked.png';\r\n\r\ntype PropsType = {\r\n    postId: string\r\n    avatarUrl: string\r\n    name: string\r\n    message: string\r\n    liked: boolean\r\n    likesCount: number\r\n    setLiked: (postId: string, liked: boolean) => void\r\n}\r\n\r\nexport const Post = (props: PropsType) => {\r\n    let onLikeClick = () => {\r\n        props.setLiked(props.postId, props.liked)\r\n    }\r\n\r\n    return <div className={s.item}>\r\n        <img className={s.ava} src={props.avatarUrl}/>\r\n        <div className={s.name}>{props.name}:</div>\r\n        <div className={s.message}>{props.message}</div>\r\n        <div>\r\n            <img onClick={onLikeClick} className={s.like} src={props.liked ? likeImg : notLikedImg}/> {props.likesCount}\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport {\r\n    addPostActionCreator,\r\n    PostType,\r\n    setLikedActionCreator,\r\n    updateNewPostTextActionCreator\r\n} from \"../../../redux/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {ActionTypes, RootStateType} from \"../../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: () => void\r\n    updateNewPostText: (newPostText: string) => void\r\n    setLiked: (postId: string, liked: boolean) => void\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    } as const\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: (action: ActionTypes) => void): MapDispatchPropsType => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n\r\n        updateNewPostText: (newPostText: string) => {\r\n            dispatch(updateNewPostTextActionCreator(newPostText))\r\n        },\r\n\r\n        setLiked: (postId: string, liked: boolean) => {\r\n            dispatch(setLikedActionCreator(postId, liked))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport {PostType} from \"../../../redux/profile-reducer\";\r\nimport s from './MyPosts.module.css';\r\nimport {Post} from \"./Post/Post\";\r\n\r\n\r\ntype PropsType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    addPost: () => void\r\n    updateNewPostText: (newPostText: string) => void\r\n    setLiked: (postId: string, liked: boolean) => void\r\n}\r\n\r\nexport const MyPosts = (props: PropsType) => {\r\n\r\n    let postElements = props.posts.map(p => <Post postId={p.id}\r\n                                                  avatarUrl={p.avatarUrl}\r\n                                                  name={p.name}\r\n                                                  message={p.message}\r\n                                                  liked={p.liked}\r\n                                                  likesCount={p.likesCount}\r\n                                                  setLiked={props.setLiked}\r\n    />)\r\n\r\n    let onAddPost = () => {\r\n        props.addPost()\r\n    }\r\n\r\n    let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value\r\n        props.updateNewPostText(text)\r\n    }\r\n\r\n    let onCtrlEnterPress = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (e.ctrlKey && e.charCode === 13) {\r\n            onAddPost()\r\n        }\r\n    }\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3>My Posts</h3>\r\n        <div className={s.newPost}>\r\n        <textarea className={s.textArea}\r\n                  value={props.newPostText}\r\n                  onChange={onPostChange}\r\n                  onKeyPress={onCtrlEnterPress}\r\n                  placeholder={\"Add a Post\"}>\r\n        </textarea>\r\n            <button className={s.addButton} onClick={onAddPost}>Add Post</button>\r\n        </div>\r\n        <div className={s.posts}>\r\n            {postElements}\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nexport const Profile = () => {\r\n\r\n    return <div>\r\n        <ProfileInfo/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}","import React from \"react\";\r\n\r\nexport const News = () => {\r\n    return <div>\r\n        News\r\n    </div>\r\n}","import React from \"react\";\r\n\r\nexport const Music = () => {\r\n    return <div>\r\n        Music\r\n    </div>\r\n}","import React from \"react\";\r\n\r\nexport const Settings = () => {\r\n    return <div>\r\n        Settings\r\n    </div>\r\n}","import {v1} from \"uuid\";\r\nimport {ActionTypes} from \"./redux-store\";\r\n\r\nexport type DialogType = {\r\n    id: string\r\n    name: string\r\n    avatar: string\r\n}\r\nexport type MessageType = {\r\n    id: string\r\n    message: string\r\n    avatar: string\r\n}\r\nexport type DialogsPageType = {\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n}\r\nexport type dialogsACTypes = ReturnType<typeof sendMessageCreator> | ReturnType<typeof updateNewMessageBodyCreator>\r\n\r\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\";\r\n\r\nlet initialState: DialogsPageType = {\r\n    dialogs: [\r\n        {\r\n            id: v1(),\r\n            name: \"Dimych\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJxegcKj7lnz8MCMgcAz-gpSgPs5u5yMvynOEWiL=s48-c-k-c0xffffffff-no-rj-mo\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Andrey\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJwpXLyeWh28awYmQxqSPXIM6q9eyw4vbkkCf-nJ=s176-c-k-c0x00ffffff-no-rj-mo\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Sveta\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJxOgKlQ3vhAxrV93fA6igEnvBQQfJyvVblmUkCCUw=s176-c-k-c0x00ffffff-no-rj-mo\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Sasha\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJx3tMtZZ9FJWqyZZo8YorLE948V2Fo4dSN3DnrzQQ=s176-c-k-c0x00ffffff-no-rj-mo\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Victor\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJyx6cm5wmcNQDxMqOnQn-PWLGuUphBLcEZGuIaYYA=s176-c-k-c0x00ffffff-no-rj-mo\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Valera\",\r\n            avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRnjOdeIgaYOFx1p9q_XwIUEYfaQsyBDTcC0g&usqp=CAU\"\r\n        }\r\n    ],\r\n    messages: [\r\n        {\r\n            id: v1(),\r\n            message: \"Hi\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJxOgKlQ3vhAxrV93fA6igEnvBQQfJyvVblmUkCCUw=s176-c-k-c0x00ffffff-no-rj-mo\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            message: \"What's up?\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJxOgKlQ3vhAxrV93fA6igEnvBQQfJyvVblmUkCCUw=s176-c-k-c0x00ffffff-no-rj-mo\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            message: \"All good)\",\r\n            avatar: \"https://i.pinimg.com/originals/5f/4f/2b/5f4f2b6eb1e078bc99c043330879c143.jpg\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            message: \"How are you?\",\r\n            avatar: \"https://i.pinimg.com/originals/5f/4f/2b/5f4f2b6eb1e078bc99c043330879c143.jpg\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            message: \"I'm fine too\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJxOgKlQ3vhAxrV93fA6igEnvBQQfJyvVblmUkCCUw=s176-c-k-c0x00ffffff-no-rj-mo\"\r\n        }\r\n    ],\r\n    newMessageText: \"\"\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let newMessage = {\r\n                id: v1(),\r\n                message: state.newMessageText,\r\n                avatar: \"https://i.pinimg.com/originals/5f/4f/2b/5f4f2b6eb1e078bc99c043330879c143.jpg\"\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n                newMessageText: \"\"\r\n            }\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            if (action.body) {\r\n                return {\r\n                    ...state,\r\n                    newMessageText: action.body\r\n                }\r\n            }\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE} as const)\r\n\r\nexport const updateNewMessageBodyCreator = (text: string) =>\r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: text} as const)\r\n\r\nexport default dialogsReducer","import React from \"react\";\r\nimport s from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    avatar: string\r\n    friendName: string\r\n    id: string\r\n}\r\n\r\nexport const DialogItem = (props: PropsType) => {\r\n    return <li className={s.dialog}>\r\n        <img className={s.avatar} src={props.avatar} />\r\n        <NavLink to={`/dialogs/${props.id}`} activeClassName={s.active}>{props.friendName}</NavLink>\r\n    </li>\r\n}","import React from \"react\";\r\nimport s from './Message.module.css'\r\n\r\ntype PropsType = {\r\n    avatar: string\r\n    message: string\r\n}\r\n\r\nexport const Message = (props: PropsType) => {\r\n\r\n    return <div\r\n        className={props.avatar === \"https://i.pinimg.com/originals/5f/4f/2b/5f4f2b6eb1e078bc99c043330879c143.jpg\" ?\r\n            `${s.rightSide}` : `${s.leftSide}`}>\r\n        {props.avatar !== \"https://i.pinimg.com/originals/5f/4f/2b/5f4f2b6eb1e078bc99c043330879c143.jpg\" &&\r\n        <img src={props.avatar}/>}\r\n        <span className={s.message}> {props.message}</span>\r\n        {props.avatar === \"https://i.pinimg.com/originals/5f/4f/2b/5f4f2b6eb1e078bc99c043330879c143.jpg\" &&\r\n        <img src={props.avatar}/>}\r\n    </div>\r\n}","import React from \"react\";\r\nimport {DialogsPageType, sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {ActionTypes, RootStateType} from \"../../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    sendMessage: () => void\r\n    updateNewMessageBody: (newMessageText: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    } as const\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: (action: ActionTypes) => void): MapDispatchPropsType => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator())\r\n        },\r\n\r\n        updateNewMessageBody: (newMessageText: string) => {\r\n            dispatch(updateNewMessageBodyCreator(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n\r\nexport default DialogsContainer","import React, {ChangeEvent, KeyboardEvent, useRef} from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Messages/Message\";\r\nimport {DialogsPageType} from \"../../redux/dialogs-reducer\";\r\n\r\ntype PropsType = {\r\n    dialogsPage: DialogsPageType\r\n    sendMessage: () => void\r\n    updateNewMessageBody: (newMessageText: string) => void\r\n}\r\n\r\nexport const Dialogs = (props: PropsType) => {\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem avatar={d.avatar} friendName={d.name}\r\n                                                                         id={d.id}/>)\r\n    let messagesElements = state.messages.map(m => <Message avatar={m.avatar} message={m.message}/>)\r\n\r\n    let newMessageBody = state.newMessageText\r\n\r\n    const textarea = useRef<HTMLTextAreaElement>(null)\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage()\r\n        textarea.current?.focus()\r\n\r\n    }\r\n\r\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.currentTarget.value\r\n        props.updateNewMessageBody(body)\r\n    }\r\n\r\n    let onCtrlEntPress = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (e.ctrlKey && e.charCode === 13) {\r\n            onSendMessageClick()\r\n        }\r\n    }\r\n\r\n    return <div className={s.dialogs}>\r\n        <div className={s.dialogItems}>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className={s.messages}>\r\n            <div className={s.chat}>\r\n                {messagesElements}\r\n            </div>\r\n            <br/>\r\n            <div className={s.newMessage}>\r\n                <div>\r\n                    <textarea className={s.textarea}\r\n                              value={newMessageBody}\r\n                              onChange={onNewMessageChange}\r\n                              onKeyPress={onCtrlEntPress}\r\n                              placeholder={\"Enter your message\"}\r\n                              ref={textarea}\r\n                              autoFocus>\r\n                    </textarea>\r\n                </div>\r\n                <div>\r\n                    <button className={s.btn} onClick={onSendMessageClick}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import {v1} from \"uuid\";\r\nimport {ActionTypes} from \"./redux-store\";\r\n\r\nexport type usersACTypes = ReturnType<typeof followAC>\r\n    | ReturnType<typeof unfollowAC>\r\n    | ReturnType<typeof setUsersAC>\r\n\r\nexport type UserType = {\r\n    id: string\r\n    photoURL: string\r\n    followed: boolean\r\n    fullName: string\r\n    status: string\r\n    location: {\r\n        city: string\r\n        country: string\r\n    }\r\n}\r\nexport type UsersPageType = {\r\n    users: Array<UserType>\r\n}\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\n\r\nlet initialState: UsersPageType = {\r\n    users: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                //users: [...state.users]\r\n                //  Analogue:\r\n                //users: state.users.map(u => u)\r\n                //We need to copy only the item that needs to be changed!\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    } //we've changed only 1 object in the array!\r\n                    return u  //the rest will be the same.\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    } //we've changed only 1 object in the array!\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...state.users, ...action.users]\r\n                //we've added the array of users from action\r\n                // to the state array!\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followAC = (userId: string) => ({type: FOLLOW, userId} as const)\r\nexport const unfollowAC = (userId: string) => ({type: UNFOLLOW, userId} as const)\r\nexport const setUsersAC = (users: Array<UserType>) => ({type: SET_USERS, users} as const)\r\n\r\n\r\nexport default usersReducer","import React from \"react\";\r\nimport {ActionTypes, RootStateType} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Users} from \"./Users\";\r\nimport {followAC, setUsersAC, unfollowAC, UserType} from \"../../redux/users-reducer\";\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<UserType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.usersPage.users, //state.\"global state branch\"\r\n    } as const\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: (action: ActionTypes) => void): MapDispatchPropsType => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)\r\n//shorter than before:\r\n// const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users)\r\n// export default UsersContainer","import React from \"react\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport s from \"./Users.module.css\"\r\nimport {v1} from \"uuid\";\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n}\r\n\r\nexport const Users = (props: PropsType) => {\r\n\r\n    if (props.users.length === 0) {\r\n        props.setUsers(\r\n            [\r\n                {\r\n                    id: v1(),\r\n                    photoURL: \"https://static.thenounproject.com/png/233095-200.png\",\r\n                    followed: false,\r\n                    fullName: \"Dmitry K.\",\r\n                    status: \"I can teach you React & Redux.\",\r\n                    location: {\r\n                        city: \"Minsk\",\r\n                        country: \"Belarus\"\r\n                    }\r\n                },\r\n                {\r\n                    id: v1(),\r\n                    photoURL: \"https://static.thenounproject.com/png/233095-200.png\",\r\n                    followed: true,\r\n                    fullName: \"Sasha D.\",\r\n                    status: \"Looking for a kind person to adopt a kitten.\",\r\n                    location: {\r\n                        city: \"Moscow\",\r\n                        country: \"Russia\"\r\n                    }\r\n                },\r\n                {\r\n                    id: v1(),\r\n                    photoURL: \"https://static.thenounproject.com/png/233095-200.png\",\r\n                    followed: false,\r\n                    fullName: \"Andrew S.\",\r\n                    status: \"Happy Friday Everyone!\",\r\n                    location: {\r\n                        city: \"Kiev\",\r\n                        country: \"Ukraine\"\r\n                    }\r\n                },\r\n                {\r\n                    id: v1(),\r\n                    photoURL: \"https://static.thenounproject.com/png/233095-200.png\",\r\n                    followed: false,\r\n                    fullName: \"Tanya T.\",\r\n                    status: \"Looking for a job right now.\",\r\n                    location: {\r\n                        city: \"Brest\",\r\n                        country: \"Belarus\"\r\n                    }\r\n                },\r\n                {\r\n                    id: v1(),\r\n                    photoURL: \"https://static.thenounproject.com/png/233095-200.png\",\r\n                    followed: true,\r\n                    fullName: \"Nikolay W.\",\r\n                    status: \"Let's make friends!\",\r\n                    location: {\r\n                        city: \"Paris\",\r\n                        country: \"France\"\r\n                    }\r\n                }\r\n            ]\r\n        )\r\n    }\r\n\r\n    return <div>\r\n        {props.users.map(u => <div key={u.id}>\r\n\r\n            <div className={s.spanBlock}>\r\n                <div className={s.divBlock + \" \" + s.photoBtnBlock}>\r\n                    <div>\r\n                        <img src={u.photoURL} className={s.userPhoto}/>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button onClick={() => props.unfollow(u.id)}>Unfollow</button>\r\n                            : <button onClick={() => props.follow(u.id)}>Follow</button>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <div className={s.spanBlock + \" \" + s.textInfoBlock}>\r\n                    <div className={s.divBlock + \" \" + s.nameStatusBlock}>\r\n                        <div>{u.fullName}</div>\r\n                        <div>{u.status}</div>\r\n                    </div>\r\n                    <div className={s.divBlock + \" \" + s.cityCountryBlock}>\r\n                        <div>{u.location.city}</div>\r\n                        <div>{u.location.country}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)}\r\n    </div>\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Route} from 'react-router-dom'\r\nimport {Header} from './components/Header/Header';\r\nimport {Navbar} from './components/Navbar/Navbar';\r\nimport {Profile} from './components/Profile/Profile';\r\nimport {News} from './components/News/News';\r\nimport {Music} from './components/Music/Music';\r\nimport {Settings} from './components/Settings/Settings';\r\nimport {Users} from './components/Users/Users';\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <Header/>\r\n            <Navbar />\r\n            <div className=\"app-wrapper-content\">\r\n                <Route path=\"/profile\" render={() => <Profile />}/>\r\n                <Route path=\"/dialogs\" render={() => <DialogsContainer />}/>\r\n                <Route path=\"/news\" render={() => <News/>}/>\r\n                <Route path=\"/music\" render={() => <Music/>}/>\r\n                <Route path=\"/users\" render={() => <UsersContainer />}/>\r\n                <Route path=\"/settings\" render={() => <Settings/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { v1 } from \"uuid\";\r\nimport {ActionTypes} from \"./redux-store\";\r\n\r\nexport type FriendsType = {\r\n    id: string\r\n    name: string\r\n    avatar: string\r\n}\r\nexport type NavBarType = {\r\n    friends: Array<FriendsType>\r\n}\r\n\r\nlet initialState: NavBarType = {\r\n    friends: [{\r\n        id: v1(),\r\n        name: \"Dimych\",\r\n        avatar: \"https://yt3.ggpht.com/a/AATXAJxegcKj7lnz8MCMgcAz-gpSgPs5u5yMvynOEWiL=s48-c-k-c0xffffffff-no-rj-mo\"\r\n    },\r\n        {\r\n            id: v1(),\r\n            name: \"Andrey\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJwpXLyeWh28awYmQxqSPXIM6q9eyw4vbkkCf-nJ=s176-c-k-c0x00ffffff-no-rj-mo\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Sveta\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJxOgKlQ3vhAxrV93fA6igEnvBQQfJyvVblmUkCCUw=s176-c-k-c0x00ffffff-no-rj-mo\"\r\n        }]\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action: ActionTypes) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default navbarReducer","import profileReducer, {profileACTypes, ProfilePageType} from \"./profile-reducer\";\r\nimport dialogsReducer, {dialogsACTypes, DialogsPageType} from \"./dialogs-reducer\";\r\nimport navbarReducer, {NavBarType} from \"./navbar-reducer\";\r\nimport {combineReducers, createStore, Store} from \"redux\";\r\nimport usersReducer, {usersACTypes, UsersPageType} from \"./users-reducer\";\r\n\r\nexport type RootStateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n    navBar: NavBarType\r\n    usersPage: UsersPageType\r\n}\r\n\r\nexport type ActionTypes = profileACTypes | dialogsACTypes | usersACTypes\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    navBar: navbarReducer,\r\n    usersPage: usersReducer,\r\n}) //above are branches of the global state\r\n\r\nlet store: Store = createStore(reducers)\r\n\r\nexport default store\r\n\r\ndeclare const window: any\r\nwindow.store = store\r\n//Store - OOP","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport store from './redux/redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}